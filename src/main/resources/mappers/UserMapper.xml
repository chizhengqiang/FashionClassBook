<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.conan.fashionclassbook.dao.UserMapper" >
  <resultMap id="BaseResultMap" type="com.conan.fashionclassbook.pojo.User" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="nickname" property="nickname" jdbcType="VARCHAR" />
    <result column="username" property="username" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="telephone" property="telephone" jdbcType="CHAR" />
    <result column="uuid" property="uuid" jdbcType="VARCHAR" />
    <result column="headImg" property="headImg" jdbcType="VARCHAR" />
    <result column="wechat" property="wechat" jdbcType="VARCHAR" />
    <result column="weibo" property="weibo" jdbcType="VARCHAR" />
    <result column="QQ" property="qq" jdbcType="VARCHAR" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="school" property="school" jdbcType="VARCHAR" />
    <result column="clazz" property="clazz" jdbcType="VARCHAR" />
    <result column="signature" property="signature" jdbcType="VARCHAR" />
    <result column="description" property="description" jdbcType="VARCHAR" />
    <result column="type" property="type" jdbcType="INTEGER" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="createTime" property="createTime" jdbcType="TIMESTAMP" />
    <result column="lastTime" property="lastTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, nickname, username, password, telephone,  uuid, headImg, wechat, weibo, QQ, email, school, clazz,
    signature, description, `type`, status, createTime, lastTime
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from user
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.conan.fashionclassbook.pojo.User" >
    insert into user (id, nickname, username, 
      password, telephone, wechat, 
      weibo, QQ, email, school, 
      clazz, signature, description, 
      `type`, status, createTime,
      lastTime, uuid, headImg
      )
    values (#{id,jdbcType=INTEGER}, #{nickname,jdbcType=VARCHAR}, #{username,jdbcType=VARCHAR}, 
      #{password,jdbcType=VARCHAR}, #{telephone,jdbcType=CHAR}, #{wechat,jdbcType=VARCHAR}, 
      #{weibo,jdbcType=VARCHAR}, #{qq,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{school,jdbcType=VARCHAR}, 
      #{clazz,jdbcType=VARCHAR}, #{signature,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR}, 
      #{type,jdbcType=SMALLINT}, #{status,jdbcType=SMALLINT}, #{createTime,jdbcType=TIMESTAMP},
      #{lastTime,jdbcType=TIMESTAMP}, #{uuid,jdbcType=VARCHAR}, #{headImg,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.conan.fashionclassbook.pojo.User" >
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="nickname != null" >
        nickname,
      </if>
      <if test="username != null" >
        username,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="telephone != null" >
        telephone,
      </if>
      <if test="wechat != null" >
        wechat,
      </if>
      <if test="weibo != null" >
        weibo,
      </if>
      <if test="qq != null" >
        QQ,
      </if>
      <if test="email != null" >
        email,
      </if>
      <if test="school != null" >
        school,
      </if>
      <if test="clazz != null" >
        clazz,
      </if>
      <if test="signature != null" >
        signature,
      </if>
      <if test="description != null" >
        description,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="createTime != null" >
        createTime,
      </if>
      <if test="lastTime != null" >
        lastTime,
      </if>
      <if test="uuid != null" >
        uuid,
      </if>
      <if test="headImg != null" >
        headImg,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="nickname != null" >
        #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="username != null" >
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="telephone != null" >
        #{telephone,jdbcType=CHAR},
      </if>
      <if test="wechat != null" >
        #{wechat,jdbcType=VARCHAR},
      </if>
      <if test="weibo != null" >
        #{weibo,jdbcType=VARCHAR},
      </if>
      <if test="qq != null" >
        #{qq,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="school != null" >
        #{school,jdbcType=VARCHAR},
      </if>
      <if test="clazz != null" >
        #{clazz,jdbcType=VARCHAR},
      </if>
      <if test="signature != null" >
        #{signature,jdbcType=VARCHAR},
      </if>
      <if test="description != null" >
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        #{type,jdbcType=SMALLINT},
      </if>
      <if test="status != null" >
        #{status,jdbcType=SMALLINT},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastTime != null" >
        #{lastTime,jdbcType=TIMESTAMP},
      </if>
      <if test="uuid != null" >
        #{uuid,jdbcType=VARCHAR},
      </if>
      <if test="headImg != null" >
        #{headImg,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.conan.fashionclassbook.pojo.User" >
    update user
    <set >
      <if test="nickname != null" >
        nickname = #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="username != null" >
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="telephone != null" >
        telephone = #{telephone,jdbcType=CHAR},
      </if>
      <if test="wechat != null" >
        wechat = #{wechat,jdbcType=VARCHAR},
      </if>
      <if test="weibo != null" >
        weibo = #{weibo,jdbcType=VARCHAR},
      </if>
      <if test="qq != null" >
        QQ = #{qq,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="school != null" >
        school = #{school,jdbcType=VARCHAR},
      </if>
      <if test="clazz != null" >
        clazz = #{clazz,jdbcType=VARCHAR},
      </if>
      <if test="signature != null" >
        signature = #{signature,jdbcType=VARCHAR},
      </if>
      <if test="description != null" >
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=SMALLINT},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=SMALLINT},
      </if>
      <if test="createTime != null" >
        createTime = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastTime != null" >
        lastTime = #{lastTime,jdbcType=TIMESTAMP},
      </if>
      <if test="uuid != null" >
        uuid = #{uuid,jdbcType=VARCHAR},
      </if>
      <if test="headImg != null" >
        headImg = #{headImg,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.conan.fashionclassbook.pojo.User" >
    update user
    set nickname = #{nickname,jdbcType=VARCHAR},
      username = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      telephone = #{telephone,jdbcType=CHAR},
      wechat = #{wechat,jdbcType=VARCHAR},
      weibo = #{weibo,jdbcType=VARCHAR},
      QQ = #{qq,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      school = #{school,jdbcType=VARCHAR},
      clazz = #{clazz,jdbcType=VARCHAR},
      signature = #{signature,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR},
      `type` = #{type,jdbcType=SMALLINT},
      status = #{status,jdbcType=SMALLINT},
      createTime = #{createTime,jdbcType=TIMESTAMP},
      lastTime = #{lastTime,jdbcType=TIMESTAMP},
      uuid = #{uuid,jdbcType=VARCHAR},
      headImg = #{headImg,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="findAll" resultMap="BaseResultMap">
    select <include refid="Base_Column_List"/> from user
  </select>

  <update id="changeStatusById" parameterType="map">
    update user set `status` = #{status} where id = #{id}
  </update>

  <select id="getById" parameterType="Integer" resultMap="BaseResultMap">
    select <include refid="Base_Column_List"/> from `user` where status != 9 AND id = #{id}
  </select>

  <select id="getCountByNickname" parameterType="String" resultType="Integer">
    select count(*) from `user` where nickname = #{nickname}
  </select>

  <select id="getCountByExistNickname" parameterType="map" resultType="Integer">
    select count(*) from `user` where nickname = #{nickname} AND id != #{id}
  </select>

  <select id="getCountByTelephone" parameterType="String" resultType="Integer">
    select count(*) from `user` where telephone = #{telephone}
  </select>

  <select id="getCountByExistTelephone" parameterType="map" resultType="Integer">
    select count(*) from `user` where telephone = #{telephone} AND id != #{id}
  </select>

  <select id="getUUIDByNickName" parameterType="String" resultType="String">
    select uuid from `user` where nickname = #{nickname}
  </select>

  <select id="findByNicknameAndPassword" parameterType="map" resultMap="BaseResultMap">
    select <include refid="Base_Column_List"/> from `user` where nickname = #{nickname} AND password = #{password}
  </select>
</mapper>